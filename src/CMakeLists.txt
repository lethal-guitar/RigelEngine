set(core_sources
    base/boost_variant.hpp
    base/grid.hpp
    base/math_tools.hpp
    base/spatial_types.hpp
    base/warnings.hpp
    data/audio_buffer.hpp
    data/duke_script.hpp
    data/game_session_data.hpp
    data/game_traits.cpp
    data/game_traits.hpp
    data/image.cpp
    data/image.hpp
    data/map.cpp
    data/map.hpp
    data/player_data.hpp
    data/sound_ids.hpp
    data/tile_attributes.cpp
    data/tile_attributes.hpp
    data/unit_conversions.cpp
    data/unit_conversions.hpp
    engine/base_components.hpp
    engine/collision_checker.cpp
    engine/collision_checker.hpp
    engine/debugging_system.cpp
    engine/debugging_system.hpp
    engine/earth_quake_effect.cpp
    engine/earth_quake_effect.hpp
    engine/entity_activation_system.cpp
    engine/entity_activation_system.hpp
    engine/entity_tools.hpp
    engine/life_time_components.hpp
    engine/life_time_system.cpp
    engine/life_time_system.hpp
    engine/map_renderer.cpp
    engine/map_renderer.hpp
    engine/physical_components.hpp
    engine/physics_system.cpp
    engine/physics_system.hpp
    engine/random_number_generator.cpp
    engine/random_number_generator.hpp
    engine/renderer.cpp
    engine/renderer.hpp
    engine/rendering_system.cpp
    engine/rendering_system.hpp
    engine/shader.cpp
    engine/shader.hpp
    engine/opengl.cpp
    engine/opengl.hpp
    engine/sprite_tools.hpp
    engine/sound_system.cpp
    engine/sound_system.hpp
    engine/texture.cpp
    engine/texture.hpp
    engine/tile_renderer.cpp
    engine/tile_renderer.hpp
    engine/timing.cpp
    engine/timing.hpp
    engine/visual_components.hpp
    game_logic/ai/blue_guard.cpp
    game_logic/ai/blue_guard.hpp
    game_logic/ai/hover_bot.cpp
    game_logic/ai/hover_bot.hpp
    game_logic/ai/laser_turret.cpp
    game_logic/ai/laser_turret.hpp
    game_logic/ai/messenger_drone.cpp
    game_logic/ai/messenger_drone.hpp
    game_logic/ai/prisoner.cpp
    game_logic/ai/prisoner.hpp
    game_logic/ai/rocket_turret.cpp
    game_logic/ai/rocket_turret.hpp
    game_logic/ai/security_camera.cpp
    game_logic/ai/security_camera.hpp
    game_logic/ai/sliding_door.cpp
    game_logic/ai/sliding_door.hpp
    game_logic/ai/slime_blob.cpp
    game_logic/ai/slime_blob.hpp
    game_logic/ai/slime_pipe.cpp
    game_logic/ai/slime_pipe.hpp
    game_logic/collectable_components.hpp
    game_logic/damage_components.hpp
    game_logic/damage_infliction_system.cpp
    game_logic/damage_infliction_system.hpp
    game_logic/dynamic_geometry_components.hpp
    game_logic/entity_configuration.ipp
    game_logic/entity_factory.cpp
    game_logic/entity_factory.hpp
    game_logic/interaction/elevator.cpp
    game_logic/interaction/elevator.hpp
    game_logic/interaction/force_field.cpp
    game_logic/interaction/force_field.hpp
    game_logic/interaction/teleporter.cpp
    game_logic/interaction/teleporter.hpp
    game_logic/map_scroll_system.cpp
    game_logic/map_scroll_system.hpp
    game_logic/player/animation_system.cpp
    game_logic/player/animation_system.hpp
    game_logic/player/attack_system.cpp
    game_logic/player/attack_system.hpp
    game_logic/player/attack_traits.cpp
    game_logic/player/attack_traits.hpp
    game_logic/player/components.hpp
    game_logic/player/damage_system.cpp
    game_logic/player/damage_system.hpp
    game_logic/player_interaction_system.cpp
    game_logic/player_interaction_system.hpp
    game_logic/player_movement_system.cpp
    game_logic/player_movement_system.hpp
    game_logic/trigger_components.hpp
    loader/actor_image_package.cpp
    loader/actor_image_package.hpp
    loader/audio_package.cpp
    loader/audio_package.hpp
    loader/bitwise_iter.hpp
    loader/byte_buffer.hpp
    loader/cmp_file_package.cpp
    loader/cmp_file_package.hpp
    loader/duke_script_loader.cpp
    loader/duke_script_loader.hpp
    loader/ega_image_decoder.cpp
    loader/ega_image_decoder.hpp
    loader/file_utils.cpp
    loader/file_utils.hpp
    loader/level_loader.cpp
    loader/level_loader.hpp
    loader/movie_loader.cpp
    loader/movie_loader.hpp
    loader/music_loader.cpp
    loader/music_loader.hpp
    loader/palette.cpp
    loader/palette.hpp
    loader/resource_loader.cpp
    loader/resource_loader.hpp
    loader/rle_compression.hpp
    loader/voc_decoder.cpp
    loader/voc_decoder.hpp
    sdl_utils/error.cpp
    sdl_utils/error.hpp
    sdl_utils/ptr.hpp
    ui/apogee_logo.cpp
    ui/apogee_logo.hpp
    ui/bonus_screen.cpp
    ui/bonus_screen.hpp
    ui/duke_script_runner.cpp
    ui/duke_script_runner.hpp
    ui/fps_display.cpp
    ui/fps_display.hpp
    ui/hud_renderer.cpp
    ui/hud_renderer.hpp
    ui/intro_movie.cpp
    ui/intro_movie.hpp
    ui/menu_element_renderer.cpp
    ui/menu_element_renderer.hpp
    ui/movie_player.cpp
    ui/movie_player.hpp
    ui/utils.cpp
    ui/utils.hpp
    utils/container_tools.hpp
    utils/enum_hash.hpp
)


set(3rd_party_path ${CMAKE_SOURCE_DIR}/3rd_party)


# Core library
add_library(rigel_core STATIC ${core_sources})
target_include_directories(rigel_core
    PUBLIC
    "${CMAKE_CURRENT_SOURCE_DIR}"
    "${SDL2_INCLUDE_DIR}"
    ${SDL2_MIXER_INCLUDE_DIRS}
    ${3rd_party_path}/entityx
    ${Boost_INCLUDE_DIRS}

    ${3rd_party_path}/atria/src
    ${3rd_party_path}/atria/compat

    ${3rd_party_path}/glad/include
    ${3rd_party_path}/glm

    PRIVATE
    ${3rd_party_path}/dbopl
    ${3rd_party_path}/speex_resampler
)
target_link_libraries(rigel_core
    PUBLIC
    "${SDL2_LIBRARY}"
    ${SDL2_MIXER_LIBRARIES}
    entityx

    PRIVATE
    dbopl
    speex_resampler
    glad
)


# Main executable
set(main_exe_sources
    game_main.cpp
    game_main.hpp
    game_main.ipp
    game_mode.hpp
    game_session_mode.cpp
    game_session_mode.hpp
    ingame_mode.cpp
    ingame_mode.hpp
    intro_demo_loop_mode.cpp
    intro_demo_loop_mode.hpp
    main.cpp
    menu_mode.cpp
    menu_mode.hpp
    mode_stage.hpp
)


add_executable(${main_exe_name} ${main_exe_sources})
target_link_libraries(${main_exe_name} PRIVATE
    ${SDLMAIN2_LIBRARY}
    rigel_core
    ${Boost_LIBRARIES}
)

