set(core_sources
    base/array_view.hpp
    base/container_utils.hpp
    base/grid.hpp
    base/math_tools.hpp
    base/spatial_types.hpp
    base/warnings.hpp
    common/command_line_options.hpp
    common/game_mode.cpp
    common/game_mode.hpp
    common/game_service_provider.hpp
    common/global.hpp
    common/json_utils.cpp
    common/json_utils.hpp
    common/user_profile.cpp
    common/user_profile.hpp
    data/actor_ids.hpp
    data/audio_buffer.hpp
    data/bonus.hpp
    data/duke_script.hpp
    data/game_options.hpp
    data/game_session_data.hpp
    data/game_traits.hpp
    data/high_score_list.cpp
    data/high_score_list.hpp
    data/image.cpp
    data/image.hpp
    data/level_hints.cpp
    data/level_hints.hpp
    data/map.cpp
    data/map.hpp
    data/player_model.cpp
    data/player_model.hpp
    data/saved_game.hpp
    data/song.hpp
    data/sound_ids.hpp
    data/strings.hpp
    data/tile_attributes.hpp
    data/tile_attributes.ipp
    data/tutorial_messages.cpp
    data/tutorial_messages.hpp
    data/unit_conversions.cpp
    data/unit_conversions.hpp
    engine/base_components.hpp
    engine/collision_checker.cpp
    engine/collision_checker.hpp
    engine/entity_activation_system.cpp
    engine/entity_activation_system.hpp
    engine/entity_tools.hpp
    engine/imf_player.cpp
    engine/imf_player.hpp
    engine/life_time_components.hpp
    engine/life_time_system.cpp
    engine/life_time_system.hpp
    engine/map_renderer.cpp
    engine/map_renderer.hpp
    engine/movement.cpp
    engine/movement.hpp
    engine/particle_system.cpp
    engine/particle_system.hpp
    engine/physical_components.hpp
    engine/physics_system.cpp
    engine/physics_system.hpp
    engine/random_number_generator.cpp
    engine/random_number_generator.hpp
    engine/rendering_system.cpp
    engine/rendering_system.hpp
    engine/sound_system.cpp
    engine/sound_system.hpp
    engine/sprite_tools.hpp
    engine/tiled_texture.cpp
    engine/tiled_texture.hpp
    engine/timing.hpp
    engine/visual_components.hpp
    game_logic/behavior_controller.hpp
    game_logic/behavior_controller_system.cpp
    game_logic/behavior_controller_system.hpp
    game_logic/camera.cpp
    game_logic/camera.hpp
    game_logic/collectable_components.hpp
    game_logic/damage_components.hpp
    game_logic/damage_infliction_system.cpp
    game_logic/damage_infliction_system.hpp
    game_logic/debugging_system.cpp
    game_logic/debugging_system.hpp
    game_logic/dynamic_geometry_components.hpp
    game_logic/dynamic_geometry_system.cpp
    game_logic/dynamic_geometry_system.hpp
    game_logic/earth_quake_effect.cpp
    game_logic/earth_quake_effect.hpp
    game_logic/effect_actor_components.cpp
    game_logic/effect_actor_components.hpp
    game_logic/effects_system.cpp
    game_logic/effects_system.hpp
    game_logic/enemies/big_green_cat.cpp
    game_logic/enemies/big_green_cat.hpp
    game_logic/enemies/blue_guard.cpp
    game_logic/enemies/blue_guard.hpp
    game_logic/enemies/bomber_plane.cpp
    game_logic/enemies/bomber_plane.hpp
    game_logic/enemies/boss_episode_1.cpp
    game_logic/enemies/boss_episode_1.hpp
    game_logic/enemies/boss_episode_2.cpp
    game_logic/enemies/boss_episode_2.hpp
    game_logic/enemies/boss_episode_3.cpp
    game_logic/enemies/boss_episode_3.hpp
    game_logic/enemies/boss_episode_4.cpp
    game_logic/enemies/boss_episode_4.hpp
    game_logic/enemies/ceiling_sucker.cpp
    game_logic/enemies/ceiling_sucker.hpp
    game_logic/enemies/dying_boss.cpp
    game_logic/enemies/dying_boss.hpp
    game_logic/enemies/enemy_rocket.cpp
    game_logic/enemies/enemy_rocket.hpp
    game_logic/enemies/eyeball_thrower.cpp
    game_logic/enemies/eyeball_thrower.hpp
    game_logic/enemies/flame_thrower_bot.cpp
    game_logic/enemies/flame_thrower_bot.hpp
    game_logic/enemies/floating_laser_bot.cpp
    game_logic/enemies/floating_laser_bot.hpp
    game_logic/enemies/grabber_claw.cpp
    game_logic/enemies/grabber_claw.hpp
    game_logic/enemies/green_bird.cpp
    game_logic/enemies/green_bird.hpp
    game_logic/enemies/hover_bot.cpp
    game_logic/enemies/hover_bot.hpp
    game_logic/enemies/laser_turret.cpp
    game_logic/enemies/laser_turret.hpp
    game_logic/enemies/messenger_drone.cpp
    game_logic/enemies/messenger_drone.hpp
    game_logic/enemies/prisoner.cpp
    game_logic/enemies/prisoner.hpp
    game_logic/enemies/red_bird.cpp
    game_logic/enemies/red_bird.hpp
    game_logic/enemies/rigelatin_soldier.cpp
    game_logic/enemies/rigelatin_soldier.hpp
    game_logic/enemies/rocket_turret.cpp
    game_logic/enemies/rocket_turret.hpp
    game_logic/enemies/security_camera.cpp
    game_logic/enemies/security_camera.hpp
    game_logic/enemies/simple_walker.cpp
    game_logic/enemies/simple_walker.hpp
    game_logic/enemies/slime_blob.cpp
    game_logic/enemies/slime_blob.hpp
    game_logic/enemies/small_flying_ship.cpp
    game_logic/enemies/small_flying_ship.hpp
    game_logic/enemies/snake.cpp
    game_logic/enemies/snake.hpp
    game_logic/enemies/spider.cpp
    game_logic/enemies/spider.hpp
    game_logic/enemies/spike_ball.cpp
    game_logic/enemies/spike_ball.hpp
    game_logic/enemies/spiked_green_creature.cpp
    game_logic/enemies/spiked_green_creature.hpp
    game_logic/enemies/unicycle_bot.cpp
    game_logic/enemies/unicycle_bot.hpp
    game_logic/enemies/wall_walker.cpp
    game_logic/enemies/wall_walker.hpp
    game_logic/enemies/watch_bot.cpp
    game_logic/enemies/watch_bot.hpp
    game_logic/entity_configuration.ipp
    game_logic/entity_factory.cpp
    game_logic/entity_factory.hpp
    game_logic/game_world.cpp
    game_logic/game_world.hpp
    game_logic/hazards/lava_fountain.cpp
    game_logic/hazards/lava_fountain.hpp
    game_logic/hazards/slime_pipe.cpp
    game_logic/hazards/slime_pipe.hpp
    game_logic/hazards/smash_hammer.cpp
    game_logic/hazards/smash_hammer.hpp
    game_logic/ientity_factory.hpp
    game_logic/ingame_systems.cpp
    game_logic/ingame_systems.hpp
    game_logic/input.hpp
    game_logic/interactive/blowing_fan.cpp
    game_logic/interactive/blowing_fan.hpp
    game_logic/interactive/elevator.cpp
    game_logic/interactive/elevator.hpp
    game_logic/interactive/enemy_radar.cpp
    game_logic/interactive/enemy_radar.hpp
    game_logic/interactive/force_field.cpp
    game_logic/interactive/force_field.hpp
    game_logic/interactive/item_container.cpp
    game_logic/interactive/item_container.hpp
    game_logic/interactive/locked_door.cpp
    game_logic/interactive/locked_door.hpp
    game_logic/interactive/missile.cpp
    game_logic/interactive/missile.hpp
    game_logic/interactive/respawn_checkpoint.cpp
    game_logic/interactive/respawn_checkpoint.hpp
    game_logic/interactive/sliding_door.cpp
    game_logic/interactive/sliding_door.hpp
    game_logic/interactive/super_force_field.cpp
    game_logic/interactive/super_force_field.hpp
    game_logic/interactive/tile_burner.cpp
    game_logic/interactive/tile_burner.hpp
    game_logic/player.cpp
    game_logic/player.hpp
    game_logic/player/components.hpp
    game_logic/player/damage_system.cpp
    game_logic/player/damage_system.hpp
    game_logic/player/interaction_system.cpp
    game_logic/player/interaction_system.hpp
    game_logic/player/projectile_system.cpp
    game_logic/player/projectile_system.hpp
    game_logic/player/ship.cpp
    game_logic/player/ship.hpp
    game_logic/trigger_components.hpp
    loader/actor_image_package.cpp
    loader/actor_image_package.hpp
    loader/adlib_emulator.hpp
    loader/audio_package.cpp
    loader/audio_package.hpp
    loader/bitwise_iter.hpp
    loader/byte_buffer.hpp
    loader/cmp_file_package.cpp
    loader/cmp_file_package.hpp
    loader/duke_script_loader.cpp
    loader/duke_script_loader.hpp
    loader/ega_image_decoder.cpp
    loader/ega_image_decoder.hpp
    loader/file_utils.cpp
    loader/file_utils.hpp
    loader/level_loader.cpp
    loader/level_loader.hpp
    loader/movie_loader.cpp
    loader/movie_loader.hpp
    loader/music_loader.cpp
    loader/music_loader.hpp
    loader/palette.cpp
    loader/palette.hpp
    loader/png_image.cpp
    loader/png_image.hpp
    loader/resource_loader.cpp
    loader/resource_loader.hpp
    loader/rle_compression.hpp
    loader/user_profile_import.cpp
    loader/user_profile_import.hpp
    loader/voc_decoder.cpp
    loader/voc_decoder.hpp
    renderer/opengl.cpp
    renderer/opengl.hpp
    renderer/renderer.cpp
    renderer/renderer.hpp
    renderer/shader.cpp
    renderer/shader.hpp
    renderer/texture.cpp
    renderer/texture.hpp
    renderer/upscaling_utils.cpp
    renderer/upscaling_utils.hpp
    sdl_utils/error.cpp
    sdl_utils/error.hpp
    sdl_utils/ptr.hpp
    ui/apogee_logo.cpp
    ui/apogee_logo.hpp
    ui/bonus_screen.cpp
    ui/bonus_screen.hpp
    ui/duke_script_runner.cpp
    ui/duke_script_runner.hpp
    ui/episode_end_sequence.cpp
    ui/episode_end_sequence.hpp
    ui/fps_display.cpp
    ui/fps_display.hpp
    ui/high_score_list.cpp
    ui/high_score_list.hpp
    ui/hud_renderer.cpp
    ui/hud_renderer.hpp
    ui/imgui_integration.cpp
    ui/imgui_integration.hpp
    ui/ingame_message_display.cpp
    ui/ingame_message_display.hpp
    ui/intro_movie.cpp
    ui/intro_movie.hpp
    ui/menu_element_renderer.cpp
    ui/menu_element_renderer.hpp
    ui/movie_player.cpp
    ui/movie_player.hpp
    ui/options_menu.cpp
    ui/options_menu.hpp
    ui/text_entry_widget.cpp
    ui/text_entry_widget.hpp
    ui/utils.cpp
    ui/utils.hpp
)


set(3rd_party_path ${CMAKE_SOURCE_DIR}/3rd_party)


# Core library
# add_library(rigel_core STATIC ${core_sources})
# target_include_directories(rigel_core
#     PUBLIC
#     "${CMAKE_CURRENT_SOURCE_DIR}"
#     ${3rd_party_path}/entityx

#     ${3rd_party_path}/glad/include
#     ${3rd_party_path}/glm
#     ${3rd_party_path}/nlohmann

#     PRIVATE
#     ${3rd_party_path}/dbopl
#     ${3rd_party_path}/speex_resampler
# )
# target_link_libraries(rigel_core
#     PUBLIC
#     SDL2::Core
#     SDL2::Mixer
#     entityx
#     Boost::boost
#     dear_imgui
#     imgui-filebrowser

#     PRIVATE
#     std::filesystem
#     dbopl
#     speex_resampler
#     glad
# )

add_library(rigel_core STATIC ${core_sources})
target_include_directories(rigel_core
    PUBLIC
    "${CMAKE_CURRENT_SOURCE_DIR}"
    ${3rd_party_path}/entityx
    ${3rd_party_path}/glad/include
    ${3rd_party_path}/glm
    ${3rd_party_path}/nlohmann

    PRIVATE
    ${3rd_party_path}/dbopl
    ${3rd_party_path}/speex_resampler
)
target_link_libraries(rigel_core
    PUBLIC
    entityx
    dear_imgui
    imgui-filebrowser

    PRIVATE
    std::filesystem
    dbopl
    speex_resampler
    glad
)

if(USE_GL_ES)
    target_compile_definitions(rigel_core PUBLIC
        RIGEL_USE_GL_ES=1
    )
endif()



# Main executable
set(main_exe_sources
    anti_piracy_screen_mode.cpp
    anti_piracy_screen_mode.hpp
    game_main.cpp
    game_main.hpp
    game_main.ipp
    game_session_mode.cpp
    game_session_mode.hpp
    game_runner.cpp
    game_runner.hpp
    intro_demo_loop_mode.cpp
    intro_demo_loop_mode.hpp
    main.cpp
    menu_mode.cpp
    menu_mode.hpp
    mode_stage.hpp
)


add_executable(${main_exe_name} ${main_exe_sources})
# target_link_libraries(${main_exe_name} PRIVATE
#     SDL2::Main
#     rigel_core
#     Boost::boost
#     Boost::program_options
#     Boost::disable_autolinking
# )
target_link_libraries(${main_exe_name} PRIVATE
    rigel_core
)
